package com.itssvkv.promap.ui.map.adaptersimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.itssvkv.promap.databinding.MapTypeRecyclerBindingimport com.itssvkv.promap.models.MapStyleclass MapStyleAdapter : ListAdapter<MapStyle, MapStyleAdapter.ItemViewHolder>(Comparator) {    var onStyleSelected: ((MapStyle) -> Unit)? = null    inner class ItemViewHolder(private val binding: MapTypeRecyclerBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(item: MapStyle) {            binding.typeNameTv.text = item.name            binding.typeNameTv.setOnClickListener {                onStyleSelected?.invoke(item)            }            if (item.id > 1) {                val layoutParams = binding.typeNameTv.layoutParams as ViewGroup.MarginLayoutParams                layoutParams.marginStart = 5                binding.typeNameTv.layoutParams = layoutParams            }        }    }    private object Comparator : DiffUtil.ItemCallback<MapStyle>() {        override fun areItemsTheSame(oldItem: MapStyle, newItem: MapStyle) =            oldItem == newItem        override fun areContentsTheSame(oldItem: MapStyle, newItem: MapStyle) =            oldItem.id == newItem.id    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ItemViewHolder {        val binding =            MapTypeRecyclerBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return ItemViewHolder(binding)    }    override fun onBindViewHolder(holder: ItemViewHolder, position: Int) {        val item = getItem(position)        item.let {            holder.bind(it)        }    }}