package com.itssvkv.promap.ui.map.bottomsheetsimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.core.widget.doAfterTextChangedimport com.google.android.material.bottomsheet.BottomSheetDialogFragmentimport com.itssvkv.promap.Rimport com.itssvkv.promap.databinding.CameraBottomSheetBindingclass CameraBottomSheet : BottomSheetDialogFragment() {    private var binding: CameraBottomSheetBinding? = null    var showBuildings: ((Boolean) -> Unit)? = null    var setMinZoomLevel: ((Float) -> Unit)? = null    var setMaxZoomLevel: ((Float) -> Unit)? = null    private var isShowBuildings = false    init {        setStyle(STYLE_NORMAL, R.style.AppBottomSheetDialogTheme)    }    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        binding = CameraBottomSheetBinding.inflate(layoutInflater, container, false)        initCheckBox()        setZoomLevel()        return binding?.root    }    private fun initCheckBox() {        binding?.showBuildings?.setOnCheckedChangeListener { _, isChecked ->            showBuildings?.invoke(isChecked)            isShowBuildings = isChecked        }    }    private fun setZoomLevel() {        binding?.minLevelEt?.doAfterTextChanged { text ->            if (text.toString().isNotEmpty()) {                setMinZoomLevel?.invoke(text.toString().toFloat())            } else {                setMinZoomLevel?.invoke(0f)            }        }        binding?.maxLevelEt?.doAfterTextChanged { text ->            if (text.toString().isNotEmpty()) {                setMaxZoomLevel?.invoke(text.toString().toFloat())            } else {                setMaxZoomLevel?.invoke(20f)            }        }    }}